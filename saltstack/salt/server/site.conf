server {
    listen 80;
    listen [::]:80;

    server_name {{ domain }};

    location / {
        add_header Strict-Transport-Security max-age=31536000;
        add_header Permissions-Policy interest-cohort=();
        return 301 https://$host$request_uri;
    }
}

{% if www %}
server {
    listen 80;
    listen [::]:80;

    server_name www.{{ domain }};

    location / {
        add_header Strict-Transport-Security max-age=31536000;
        add_header Permissions-Policy interest-cohort=();
        return 301 https://{{ domain }}$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name www.{{ domain }};

    location / {
        add_header Strict-Transport-Security max-age=31536000;
        add_header Permissions-Policy interest-cohort=();
        return 301 https://{{ domain }}$request_uri;
    }

    ssl_certificate /etc/letsencrypt/live/{{ main_domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ main_domain }}/privkey.pem; # managed by Certbot
}
{% endif %}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{ domain }};

    root {{ root }};

    location / {
        access_log /var/log/nginx/access-{{ domain }}.log compression;
        add_header Strict-Transport-Security max-age=31536000;
        add_header Permissions-Policy interest-cohort=();
        try_files $uri $uri/ =404;
    }

    location ~ \.asc$ {
        access_log /var/log/nginx/access-{{ domain }}.log compression;
        add_header Strict-Transport-Security max-age=31536000;
        add_header Permissions-Policy interest-cohort=();
        default_type "application/pgp-keys";
    }

{% for path in salt['arkonf.lines']('{}/.config/public_paths.txt'.format(root)) %}
    location /{{ path }} {
        access_log /var/log/nginx/access-{{ domain }}.log compression;
        add_header Strict-Transport-Security max-age=31536000;
        add_header Permissions-Policy interest-cohort=();
        charset utf-8;
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
    }
{% endfor %}

{% if matrix %}
    location /_matrix/ {
        proxy_pass http://127.0.0.1:6167$request_uri;
        proxy_set_header Host $http_host;
        proxy_buffering off;
     }
{% endif %}

    rewrite ^security\.txt$ https://{{ domain }}/.well-known/security.txt permanent;

{% for source, target in salt['arkonf.key_values']('{}/.config/redirects.txt'.format(root)) %}
    rewrite {{ source }} {{ target }} permanent;
{% endfor %}

{% for source, target in salt['arkonf.key_values']('{}/.config/temporary_redirects.txt'.format(root)) %}
    rewrite {{ source }} {{ target }} redirect;
{% endfor %}

    ssl_certificate /etc/letsencrypt/live/{{ main_domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ main_domain }}/privkey.pem; # managed by Certbot
}

{% if matrix %}

server {
    listen 8448 ssl http2;
    listen [::]:8448 ssl http2;

    server_name {{ domain }};

    location /_matrix/ {
        proxy_pass http://127.0.0.1:6167$request_uri;
        proxy_set_header Host $http_host;
        proxy_buffering off;
     }

    rewrite ^security\.txt$ https://{{ domain }}/.well-known/security.txt permanent;
    ssl_certificate /etc/letsencrypt/live/{{ main_domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ main_domain }}/privkey.pem; # managed by Certbot
}

{% endif %}