# "-*- sh -*-"

unalias -a

cx() {
    chmod +x $@
}

if grep --color . <(echo .) >& /dev/null; then
    grep() {
        command grep --color=auto $@
    }
fi

vd() {
    vimdiff -c 'set diffopt+=iwhite' $@
}

ed() {
    if ! cmp -s $1 $2 > /dev/null; then
        e --eval '(ediff-files "'$(readlink -f $1)'" "'$(readlink -f $2)'")'
    fi
}

if which hexyl >& /dev/null; then
    hx() {
        hexyl $@
    }
else
    hx() {
        hexdump -C $@
    }
fi

if !which bat >& /dev/null; then
    bat() {
        less $@
    }
fi

dm() {
    LC_NUMERIC=C datamash $@
}

pf() {
    gprof -b $@
}

gdb() {
    command gdb -q $@
}

jdb() {
    local jdbpath
    jdbpath=$(sed -n 's@^\(.*/bin/\)java.*@\1@p' /proc/$1/cmdline)
    command $jdbpath/jdb -connect sun.jvm.hotspot.jdi.SAPIDAttachingConnector:pid=$1 $@[2,-1]
}

sc() {
    screen $@
}

kp() {
    keepassx $@ &!
}

mem() {
    vmstat -sSM $@
}

ht() {
    ln -sf $ARKONF_DIR/htop/light.htoprc ~/.config/htop/htoprc
    command htop
}

htt() {
    ln -sf $ARKONF_DIR/htop/light_threads.htoprc ~/.config/htop/htoprc
    command htop
}

htop() {
    ln -sf $ARKONF_DIR/htop/full.htoprc ~/.config/htop/htoprc
    command htop
}

htopt() {
    ln -sf $ARKONF_DIR/htop/full_threads.htoprc ~/.config/htop/htoprc
    command htop
}

wa() {
    watch $@
}

py() {
    python -i -c 'import user'
}

pw() {
    pwgen --secure --ambiguous 12
}

fu() {
    if [[ $OS =~ 'Windows' ]]; then
        pacman -Syu
    elif which apt >& /dev/null; then
        sudo apt update && sudo apt upgrade
    elif which pacman >& /dev/null; then
        sudo pacman -Syu && sudo pacdiff
    else
        echo 'Package manager is unknown' >&2
        return 1
    fi
}

tig() {
    command tig --show-signature $@
}

mnt() {
    udisksctl mount -b $@
}

umnt() {
    udisksctl unmount -b $@
}

if [[ $OS =~ 'Windows' ]]; then
    scp() {
        rsync -aAzz --info=progress2 --partial-dir=.rsync-partial $@
    }
else
    scp() {
        rsync -aAXzz --info=progress2 --partial-dir=.rsync-partial $@
    }
fi

if [[ $USER != nonfreegaming ]]; then
    wine() {
        echo "Currently logged in as '$USER', consider using the 'nonfreegaming' account instead" >&2
        return 1
    }

    steam() {
        echo "Currently logged in as '$USER', consider using the 'nonfreegaming' account instead" >&2
        return 1
    }

    teamspeak3() {
        echo "Currently logged in as '$USER', consider using the 'nonfreegaming' account instead" >&2
        return 1
    }
fi
