# "-*- sh -*-"

###############################
#    Creation d'une archive   #
###############################

function c()
{
    if [ $# -ne 1 ]; then
	echo 'Usage: c <directory>' >&2
	return 1
    fi

    print "\033[32mCompresssing \033[1m$1\033[0;32m (\033[1m7-Zip\033[0;32m compressed archive)...\033[0m"
    7za a "`echo $1 | sed -r 's_/?$_.7z_'`" "$1"
}

function ca()
{
    for arg; do
	print "\033[32mCompressing \033[1m$arg\033[0;32m (\033[1m7-Zip\033[0;32m compressed archive)...\033[0m"
	7za a `echo $arg | sed -r 's_/?$_.7z_'` "$arg"
    done
}

###############################
#   Extraction d'une archive  #
###############################

function x()
{
    # Extracteur universel v1.2 (beta 2)
    # (C) 2008-2009 Arkanosis
    # arkanosis@gmail.com
    for arg; do
	case "$arg" in
	    *.(tar.bz2|tbz2))
                if [ `tar tvjf $arg | sed 's@.*[ \t]\([^ \t/]\+\)\(/.*\)\?$@\1@' | sort -u | wc -l` -gt 1 ]; then
		    echo 'No root directory. Create one?'
		    read y
		    if [ "$y" = 'y' ] || [ "$y" = 'Y' ]; then
			dir=`echo $arg | sed 's/\.\(tbz2\|tar\.bz2\)$//'`
			mkdir $dir
			cd $dir && echo 'n' | x ../$arg && cd ..
			continue
		    fi
		fi

		print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mBZip2\033[0;32m compressed archive)...\033[0m"
		tar xvjf "$arg"
	    ;;
	    *.(tar.gz|tgz))
                if [ `tar tvzf $arg | sed 's@.*[ \t]\([^ \t/]\+\)\(/.*\)\?$@\1@' | sort -u | wc -l` -gt 1 ]; then
		    echo 'No root directory. Create one?'
		    read y
		    if [ "$y" = 'y' ] || [ "$y" = 'Y' ]; then
			dir=`echo $arg | sed 's/\.\(tgz\|tar\.gz\)$//'`
			mkdir $dir
			cd $dir && echo 'n' | x ../$arg && cd ..
			continue
		    fi
		fi

		print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mGZip\033[0;32m compressed archive)...\033[0m"
		tar xvzf "$arg"
	    ;;
	    *.7z)
	        print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1m7-Zip\033[0;32m compressed archive)...\033[0m"
		7za x "$arg"
	    ;;
	    *.bz2)
	        print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mBZip2\033[0;32m compressed file)...\033[0m"
		bunzip2 "$arg"
	    ;;
	    *.gz)
	        print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mGZip\033[0;32m compressed file)...\033[0m"
		gunzip "$arg"
	    ;;
	    *.zip)
                if [ `unzip -l $arg | tail -n +4 | head -n -2 | sed 's@[ \t]*[0-9]\+[ \t]\+[0-1][0-9]-[0-3][0-9]-[0-9][0-9][ \t]\+[0-2][0-9]:[0-6][0-9][ \t]\+\([^ \t]\+\)@\1@' | sort -u | wc -l` -gt 1 ]; then
		    echo 'No root directory. Create one?'
		    read y
		    if [ "$y" = 'y' ] || [ "$y" = 'Y' ]; then
			dir=`echo $arg | sed 's/\.zip$//'`
			mkdir $dir
			cd $dir && echo 'n' | x ../$arg && cd ..
			continue
		    fi
		fi

	        print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mZip\033[0;32m compressed archive)...\033[0m"
		unzip "$arg"
	    ;;
	    *.Z)
	        print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mZ\033[0;32m compressed file)...\033[0m"
		uncompress "$arg"
	    ;;
	    *.docx)
	        print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mOpenXML\033[0;32m text document)...\033[0m"
		unzip "$arg"
	    ;;
	    *.tar)
                if [ `tar tvf $arg | sed 's@.*[ \t]\([^ \t/]\+\)\(/.*\)\?$@\1@' | sort -u | wc -l` -gt 1 ]; then
		    echo 'No root directory. Create one?'
		    read y
		    if [ "$y" = 'y' ] || [ "$y" = 'Y' ]; then
			dir=`echo $arg | sed 's/\.tar$//'`
			mkdir $dir
			cd $dir && echo 'n' | x ../$arg && cd ..
			continue
		    fi
		fi

		print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mNon-compressed\033[0;32m archive)...\033[0m"
		tar xvf "$arg"
	    ;;
	    *.deb)
	        print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mDebian\033[0;32m package)...\033[0m"
		dpkg-deb -x "$arg" `echo $arg | sed 's/\.deb$//'`
	    ;;
	    *.xpi)
	        print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mxpi\033[0;32m plugin)...\033[0m"
		unzip "$arg"
	    ;;
	    *.rar)
	        print "\033[32mExtracting \033[1m$arg\033[0;32m (\033[1mRar\033[0;32m compressed archive)...\033[0m"
		unrar e "$arg"
	    ;;
	    *)
	        print "\033[91mCannot extract \033[1m$arg\033[0;31m (\033[1mUnknown\033[0;31m archive type)...\033[0m"
	    ;;
        esac
    done
}

###############################
#    Listage d'une archive    #
###############################

function t()
{
    # Listeur universel v1.1
    # (C) 2008 Arkanosis
    # arkanosis@gmail.com
    for arg; do
	case "$arg" in
	    *.(tar.bz2|tbz2))
                print "\033[32mListing \033[1m$arg\033[0;32m (\033[1mBZip2\033[0;32m compressed archive)...\033[0m"
		tar tvjf "$arg"
	    ;;
	    *.(tar.gz|tgz))
	        print "\033[32mListing \033[1m$arg\033[0;32m (\033[1mGZip\033[0;32m compressed archive)...\033[0m"
		tar tvzf "$arg"
	    ;;
	    *.7z)
	        print "\033[32mListing \033[1m$arg\033[0;32m (\033[1m7-Zip\033[0;32m compressed archive)...\033[0m"
		7za l "$arg"
	    ;;
	    *.bz2)
	        print "\033[32mListing \033[1m$arg\033[0;32m (\033[1mBZip2\033[0;32m compressed file)...\033[0m"
		echo "$arg" | sed -e 's/.bz2$//'
	    ;;
	    *.gz)
	        print "\033[32mListing \033[1m$arg\033[0;32m (\033[1mGZip\033[0;32m compressed file)...\033[0m"
		echo "$arg" | sed -e 's/.gz$//'
	    ;;
	    *.zip)
	        print "\033[32mListing \033[1m$arg\033[0;32m (\033[1mZip\033[0;32m compressed archive)...\033[0m"
		unzip -l "$arg"
	    ;;
	    *.docx)
	        print "\033[32mListing \033[1m$arg\033[0;32m (\033[1mOpenXML\033[0;32m text document)...\033[0m"
		unzip -l "$arg"
	    ;;
	    *.tar)
	        print "\033[32mListing \033[1m$arg\033[0;32m (\033[1mNon-compressed\033[0;32m archive)...\033[0m"
		tar tvf "$arg"
	    ;;
	    *.deb)
	        print "\033[32mListing \033[1m$arg\033[0;32m (\033[1mDebian\033[0;32m package)...\033[0m"
		echo 'Not implemented'
	    ;;
	    *.xpi)
	        print "\033[32mListing \033[1m$arg\033[0;32m (\033[1mxpi\033[0;32m plugin)...\033[0m"
		unzip -l "$arg"
	    ;;
	    *.rar)
	        print "\033[32mListing \033[1m$arg\033[0;32m (\033[1mRar\033[0;32m compressed archive)...\033[0m"
		unrar l "$arg"
	    ;;
	    *)
	        print "\033[91mCannot list \033[1m$arg\033[0;31m (\033[1mUnknown\033[0;31m archive type)...\033[0m"
	    ;;
	esac
    done
}