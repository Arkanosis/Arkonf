# "-*- sh -*-"

function c()
{
    if ! ((#)); then
	echo 'Usage: c <directory> [directory [...]]' >&2
	return 1
    fi

    for arg; do
	print "\e[32mCompressing \e[1m$arg\e[0;32m (\e[1m7-Zip\e[0;32m compressed archive)...\e[0m"
	7za a `echo $arg | sed 's_/\?$_.7z_'` $arg
    done
}

function flattendir() {
    if test -d $1/$1 && [[ `ls -l $1 | wc -l` = 2 ]]; then
	command mv $1/$1/*(N) $1/$1/.*(N) $1
	rmdir $1/$1
    fi
}

function x()
{
    # Extracteur universel v1.4
    # (C) 2008-2014 Arkanosis
    # jroquet@arkanosis.net
    for arg; do
	case $arg in
	    *.(tar.bz2|tbz2))
	        dir=`echo $arg | sed 's/\.\(tbz2\|tar\.bz2\)$//'`
		if test -e $dir; then
		    echo "$dir already exists, cannot extract $arg" >&2
		    break
		fi
		mkdir $dir && \
		cd $dir >&- && \
		print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mBZip2\e[0;32m compressed archive)...\e[0m" && \
		tar xvjf ../$arg && \
		cd - >&- && \
		flattendir $dir
	    ;;
	    *.(tar.gz|tgz))
	        dir=`echo $arg | sed 's/\.\(tgz\|tar\.gz\)$//'`
		if test -e $dir; then
		    echo "$dir already exists, cannot extract $arg" >&2
		    break
		fi
		mkdir $dir && \
		cd $dir >&- && \
		print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mGZip\e[0;32m compressed archive)...\e[0m" && \
		tar xvzf ../$arg && \
		cd - >&- && \
		flattendir $dir
	    ;;
	    *.(tar.xz|txz))
	        dir=`echo $arg | sed 's/\.\(txz\|tar\.xz\)$//'`
		if test -e $dir; then
		    echo "$dir already exists, cannot extract $arg" >&2
		    break
		fi
		mkdir $dir && \
		cd $dir >&- && \
		print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mXz\e[0;32m compressed archive)...\e[0m" && \
		7za x ../$arg && \
		tar xvf $arg.tar && \
		rm $arg.tar && \
		cd - >&- && \
		flattendir $dir
	    ;;
	    *.7z)
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1m7-Zip\e[0;32m compressed archive)...\e[0m"
		7za x $arg
	    ;;
	    *.xz)
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mXz\e[0;32m compressed file)...\e[0m"
		7za x $arg
	    ;;
	    *.bz2)
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mBZip2\e[0;32m compressed file)...\e[0m"
		bunzip2 $arg
	    ;;
	    *.gz)
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mGZip\e[0;32m compressed file)...\e[0m"
		gunzip $arg
	    ;;
	    *.(zip|jar))
	        dir=`echo $arg | sed 's/\.\(zip\|jar\)$//'`
		if test -e $dir; then
		    echo "$dir already exists, cannot extract $arg" >&2
		    break
		fi
		mkdir $dir && \
		cd $dir >&- && \
		print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mZip\e[0;32m compressed archive)...\e[0m" && \
		unzip ../$arg && \
		cd - >&- && \
		flattendir $dir
	    ;;
	    *.Z)
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mZ\e[0;32m compressed file)...\e[0m"
		uncompress $arg
	    ;;
	    *.docx)
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mOpenXML\e[0;32m text document)...\e[0m"
		unzip $arg
	    ;;
	    *.od(g|p|s|t))
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mOpenDocument\e[0;32m document)...\e[0m"
		unzip $arg
	    ;;
	    *.tar)
	        dir=`echo $arg | sed 's/\.tar$//'`
		if test -e $dir; then
		    echo "$dir already exists, cannot extract $arg" >&2
		    break
		fi
		mkdir $dir && \
		cd $dir >&- && \
		print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mNon-compressed\e[0;32m archive)...\e[0m" && \
		tar xvf ../$arg && \
		cd - >&- && \
		flattendir $dir
	    ;;
	    *.deb)
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mDebian\e[0;32m package)...\e[0m"
		dpkg-deb -xv $arg `echo $arg | sed 's/\.deb$//'`
	    ;;
	    *.rpm)
	        dir=`echo $arg | sed 's/\.rpm$//'`
		if test -e $dir; then
		    echo "$dir already exists, cannot extract $arg" >&2
		    break
		fi
		mkdir $dir && \
		cd $dir >&- && \
		print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mRedHat\e[0;32m package)...\e[0m" && \
		rpm2cpio ../$arg | cpio -idmv && \
		cd - >&- && \
		flattendir $dir
	    ;;
	    *.xpi)
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mxpi\e[0;32m plugin)...\e[0m"
		unzip $arg
	    ;;
	    *.rar)
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mRar\e[0;32m compressed archive)...\e[0m"
		unrar x $arg
	    ;;
	    *)
	        print "\e[91mCannot extract \e[1m$arg\e[0;31m (\e[1mUnknown\e[0;31m archive type)...\e[0m"
	    ;;
        esac
    done
}

function t()
{
    # Listeur universel v1.3
    # (C) 2008-2009 Arkanosis
    # jroquet@arkanosis.net
    for arg; do
	case $arg in
	    *.(tar.bz2|tbz2))
                print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mBZip2\e[0;32m compressed archive)...\e[0m"
		tar tvjf $arg
	    ;;
	    *.(tar.gz|tgz))
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mGZip\e[0;32m compressed archive)...\e[0m"
		tar tvzf $arg
	    ;;
	    *.(tar.xz|txz))
	        print "\e[32mExtracting \e[1m$arg\e[0;32m (\e[1mXz\e[0;32m compressed archive)...\e[0m"
		7za x $arg
		tarball=`echo $arg | sed 's/\.xz$//'`
		tar tvf $tarball
		rm $tarball
	    ;;
	    *.7z)
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1m7-Zip\e[0;32m compressed archive)...\e[0m"
		7za l $arg
	    ;;
	    *.bz2)
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mBZip2\e[0;32m compressed file)...\e[0m"
		echo $arg | sed -e 's/.bz2$//'
	    ;;
	    *.gz)
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mGZip\e[0;32m compressed file)...\e[0m"
		echo $arg | sed -e 's/.gz$//'
	    ;;
	    *.(zip|jar))
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mZip\e[0;32m compressed archive)...\e[0m"
		unzip -l $arg
	    ;;
	    *.docx)
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mOpenXML\e[0;32m text document)...\e[0m"
		unzip -l $arg
	    ;;
	    *.od(g|p|s|t))
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mOpenDocument\e[0;32m document)...\e[0m"
		unzip -l $arg
	    ;;
	    *.tar)
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mNon-compressed\e[0;32m archive)...\e[0m"
		tar tvf $arg
	    ;;
	    *.deb)
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mDebian\e[0;32m package)...\e[0m"
		echo 'Not implemented'
	    ;;
	    *.xpi)
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mxpi\e[0;32m plugin)...\e[0m"
		unzip -l $arg
	    ;;
	    *.rar)
	        print "\e[32mListing \e[1m$arg\e[0;32m (\e[1mRar\e[0;32m compressed archive)...\e[0m"
		unrar l $arg
	    ;;
	    *)
	        print "\e[91mCannot list \e[1m$arg\e[0;31m (\e[1mUnknown\e[0;31m archive type)...\e[0m"
	    ;;
	esac
    done
}
