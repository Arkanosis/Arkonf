# "-*- sh -*-"

csrcexts=(
    h c
    hh hpp hxx ipp C cc cpp cxx
    ll yy
)

puresrcexts=(
    $csrcexts
    cs
    di
    el
    exa
    hs
    java
    js
)

srcexts=(
    $puresrcexts
    d
    php
    pl pm
    py
    rb
    sh zsh
)

csrcexp='\( '
for csrcext in $csrcexts; do
    csrcexp+="\|$csrcext"
done
csrcexp+='\)'

colorizeGCC() {
    local location yellow red

    location="^\.\?[a-zA-Z_/@0-9\.-]\+\.$csrcexp:[0-9]\+\(:[0-9]\+\)\?:"
    yellow="\\\\e[1;33m&\\\\e[0m"
    red="\\\\e[1;31m&\\\\e[0m"
    while read line; do
	line=$(echo $line | sed "
            s%$location warning:%$yellow%
            s%$location error:%$red%
        ")
	echo $line
    done
}

cpl() {
    gcc -Wall -Wextra -std=c89 -pedantic $@ |& colorizeGCC
}
cpo() {
    gcc -Wall -Wextra -std=c99 -pedantic $@ |& colorizeGCC
}
gpp() {
    g++ -Wall -Wextra -Wconversion -Wabi -std=c++11 -pedantic -Wno-long-long $@ |& colorizeGCC
}

tcp() {
    local name ret

    name=$(mktemp)
    print '\e[1;33m*** Compiling ***\e[0m'
    echo $(which gpp) $@
    gpp $@ -o $name

    ret=$?

    if ((ret)) || ! [[ -x $name ]]; then
	return $ret
    fi

    print '\e[1;33m*** Running ' $name '***\e[0m'
    time $name
    return $?
}

tjp() {
    local name ret

    name=$(mktemp -d)
    print '\e[1;33m*** Compiling ***\e[0m'
    echo $(which javac) $1
    javac $1 -d $name

    ret=$?

    if ((ret)) || ! [[ -r $name/${${1##*/}/java/class} ]]; then
	return $ret
    fi

    print '\e[1;33m*** Running java -cp' $name ${${1##*/}%%.java} '***\e[0m'
    time java -cp $name ${${1##*/}%%.java}
    return $?
}

dgpp() {
    gpp -pg -ggdb $@
}

cf() {
    ./configure $@
}

export MAKEFLAGS="-j $(nproc)"

m() {
    make $@ | colorizeGCC
}

cl() {
    make clean $@
}

mca() {
    make clean all $@ | colorizeGCC
}

cmca() {
    ./configure && make clean all $@ | colorizeGCC
}

arf() {
    autoreconf -if $@
}

dcm() {
    objdump -SM intel $@
}
