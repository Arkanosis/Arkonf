# "-*- sh -*-"

if which emacs >& /dev/null; then
   export EDITOR='emacsclient -nw -s emacsconsole'
elif which vim >& /dev/null; then
   export EDITOR='vim'
else
   export EDITOR='vi'
fi

v()
{
    $=EDITOR $@
}

if which emacs >& /dev/null; then
    eline() {
        local cmd args split

        cmd=($=1)
        shift

        args=()

        for arg; do
            if test -r $arg; then
                args+=$arg
            else
                split=(${(s.:.)arg})
                if [[ $split[2] = <-> ]]; then
                    args+=(+$split[2] $split[1])
                else
                    args+=$arg
                fi
            fi
        done

        $cmd $args
    }

    e() {
        eline 'emacs -nw' $@
    }
    ec() {
        eline 'emacsclient -nw' $@
    }

    re() {
        if [[ -f Cargo.toml ]]; then
            e $@ Cargo.toml src/main.rs --eval '(setq compile-command "cd '"$(pwd)"' && cargo run -- --version")'
        elif [[ -f main.go || -f lib.go ]]; then
	    if [[ -f Makefile ]]; then
		e $@ Makefile (main|lib).go --eval '(setq compile-command "cd '"$(pwd)"' && make")'
	    else
		e $@ (main|lib).go --eval '(setq compile-command "cd '"$(pwd)"' && go build")'
	    fi
        elif [[ -f pom.xml ]]; then
            e $@ pom.xml --eval '(setq compile-command "cd '"$(pwd)"' && mvn package && java -jar target/*-SNAPSHOT.jar")'
        elif [[ -f gradlew ]]; then
            e $@ app/src/main/(java|kotlin) --eval '(setq compile-command "cd '"$(pwd)"' && JAVA_HOME=/opt/android-studio/jre/ ./gradlew build")'
        elif [[ -f package.json ]]; then
            e $@ src/index.(html|js|jsx|ts|tsx) --eval '(setq compile-command "cd '"$(pwd)"' && yarn run dev")'
        elif [[ -f Makefile ]]; then
            e $@ Makefile --eval '(setq compile-command "cd '"$(pwd)"' && make")'
        fi
    }
else
    e() {
        $=EDITOR $@
    }
fi

PAGER=less

if [[ $OS =~ 'Windows' ]]; then
    td() {
	e ~/Documents/Org
    }
else
    td() {
        ec -s org ~/Documents/Org
    }
fi

utd() {
    kill -18 $(ps aux | grep 'emac[s].*org' | awk '{ print $2 }')
}
