# "-*- sh -*-"
# (C) 2011 Mikael Magnusson

# create a new keymap to use while pasting
bindkey -N paste

# make everything in this keymap call our custom widget
bindkey -R -M paste "^@"-"\M-^?" paste-insert

# these are the codes sent around the pasted text in bracketed paste mode.
bindkey '^[[200~' _start_paste
bindkey -M paste '^[[201~' _end_paste

# insert newlines rather than carriage returns when pasting newlines
bindkey -M paste -s '^M' '^J'

function _zle_line_init() {
  # Tell urxvt to send escape codes around a paste
  [[ $TERM = rxvt-unicode || $TERM = xterm || $TERM = screen-256color ]] && printf '\e[?2004h'
}

function _zle_line_finish() {
  # Tell it to stop
  [[ $TERM = rxvt-unicode || $TERM = xterm || $TERM = screen-256color ]] && printf '\e[?2004l'
}

# switch the active keymap to paste mode
function _start_paste() {
  bindkey -A paste main
}

function _end_paste() {
  bindkey -e
  if [[ $_SPACE_AFTER_PASTE_QUOTE = 1 ]]; then
    LBUFFER+=${(q)_paste_content}' '
  else
    LBUFFER+=$_paste_content
  fi
  unset _paste_content
}

function _spaceafterpastequote() {
  if [[ $_SPACE_AFTER_PASTE_QUOTE = 1 ]]; then
    _SPACE_AFTER_PASTE_QUOTE=0
    zle -M "Not inserting a space after pastes, not quoting"
  else
    _SPACE_AFTER_PASTE_QUOTE=1
    zle -M "Inserting a space after pastes and quoting"
  fi
}

function _paste_insert() {
  _paste_content+=$KEYS
}

zle -N zle-line-init _zle_line_init
zle -N zle-line-finish _zle_line_finish
zle -N _start_paste
zle -N _end_paste
zle -N paste-insert _paste_insert
zle -N _spaceafterpastequote
