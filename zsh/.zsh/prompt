# "-*- sh -*-"

setopt prompt_subst

function precmd()
{
    vcs=''
    if [[ -d .svn ]] ; then
        vcs="[svn:`svn info | grep Revision | sed 's/.* \(.*\)/\1/g'`]"
    fi
    base_dir='.'
    while [ ! -d "$base_dir/.hg" ] && [ ! -d "$base_dir/.git" ] && [ "`readlink -f "$base_dir"`" != '/' ]; do
	base_dir="$base_dir/.."
    done
    if [ -d "$base_dir/.hg/" ]; then
	if [ -f "$base_dir/.hg/branch" ]; then
            vcs="${vcs}[hg:`< $base_dir/.hg/branch`:`hg id -n`]"
	else
            vcs="${vcs}[hg:default:`hg id -n`]"
	fi
    elif [ -d "$base_dir/.git/" ]; then
	branch=`git branch`
        vcs="${vcs}[git:$branch[3,-1]:`git describe |& sed "s/.*'\([0-9a-z]\{6\}\)[0-9a-z]\{34\}'/\1/"`]"
    fi

    case "$TERM" in
 	*xterm*|*rxvt*|Eterm)
	    echo -ne "\e]0;${HOSTNAME%%.*}${PWD/$HOME/~} $vcs\007"
 	    ;;
 	screen)
	    echo -ne "\e_${HOSTNAME%%.*}${PWD/$HOME/~} $vcs\e\\"
 	    ;;
    esac

gray=`print "\e[90m"`
PROMPT='%{$fg_bold[$PROMPT_COLOR]%}%m%{$reset_color$fg[$PROMPT_COLOR]%}%(2L.:%L.)%~ (%(?.$fg[green]%?.$fg[red]%?)$fg[$PROMPT_COLOR]) $gray$vcs$fg[$PROMPT_COLOR]
%!%{$fg_bold[$PROMPT_COLOR]%} $ %{$reset_color%}'
}

autoload -U colors
colors

RPROMPT='%(1j.[%j].)'

# Affiche le texte, meme s'il n'y a pas de retour a la ligne
setopt NOPROMPTCR