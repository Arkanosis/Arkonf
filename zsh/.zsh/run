# "-*- sh -*-"

each() {
    for item; do
        $item
    done
}

run() {
    local program

    if ((# < 2)); then
        echo 'Usage: run <program> [options] \; [arguments]' >&2
        return 1
    fi

    program=$1
    shift

    while ((# > 1)) && [[ $1 != \; ]]; do
        program+=($1)
        shift
    done

    if ! ((#)); then
        return
    fi

    shift

    for item; do
        $program $item
    done
}

diapo() {
    run xv -shrink \; *.jpg
}

runin() {
    pushd $1 > /dev/null
    shift
    $@
    popd > /dev/null
}

psd() {
    pgrep -f $@
}

lxc-boot() {
    local dir='' distribution=debian release=buster
    while [[ $1 = -* ]]; do
        case $1 in
            -t)
                shift
                dir="--dir"
            ;;
            -arch)
                shift
                distribution=archlinux
                release=current
            ;;
            -bionic)
                shift
                distribution=ubuntu
                release=bionic
            ;;
            -focal)
                shift
                distribution=ubuntu
                release=focal
            ;;
            -stretch)
                shift
                distribution=debian
                release=stretch
            ;;
            -buster)
                shift
                distribution=debian
                release=buster
            ;;
            -bullseye)
                shift
                distribution=debian
                release=bullseye
            ;;
            -bookworm)
                shift
                distribution=debian
                release=bookworm
            ;;
            -r8)
                shift
                distribution=rockylinux
                release=8
            ;;
            -r9)
                shift
                distribution=rockylinux
                release=9
            ;;
            -custom)
                distribution=$2
                release=$3
                shift 3
            ;;
            *)
                echo "Unknown option $1" >&2
                return 1
            ;;
        esac
    done

    if [[ -n $dir ]]; then
        dir="--dir /tmp/$1"
        mkdir -p "/tmp/$1"
    fi

    if ! systemctl status lxc | grep -q 'Active: active'; then
        sudo systemctl start lxc || return 1
    fi

    if ! systemctl status lxc-net | grep -q 'Active: active'; then
        sudo systemctl start lxc-net || return 1
    fi

    if ! lxc-ls --line --active | grep -q "^$1\$"; then
        if ! lxc-ls --line --stopped | grep -q "^$1\$"; then
            lxc-create -n $1 $=dir -t download -- -d $distribution -r $release -a amd64
        fi
        systemd-run --user --scope --property 'Delegate=yes' --unit "lxc_start_$1" -- lxc-start -n $1
    fi
    systemd-run --user --scope --property 'Delegate=yes' --unit "lxc_attach_$1" -- lxc-attach  -n $1 \
        -v PATH=/bin:/sbin:/usr/bin:/usr/sbin \
        -v SHELL=/bin/sh \
        -v HOME=/root \
        -v LANG=C \
        -v LC_ALL=C
}

VMS_ROOT=/mnt/lssd/VMs

vm-init() {
    if ((# < 2)); then
        echo 'Usage: vm-init <name> <image.iso>' >&2
        return 1
    fi

    qemu-img create \
        -f qcow2 \
	$VMS_ROOT/$1.disk \
	50G

    cp /usr/share/edk2/x64/OVMF_VARS.4m.fd $VMS_ROOT/$1.efi

    qemu-system-x86_64 \
	-enable-kvm \
	-machine q35 \
	-device intel-iommu \
	-cpu host \
	-smp cores=3 \
	-m 12G \
	-cdrom $2 \
	-drive if=pflash,format=raw,readonly=on,file=/usr/share/edk2/x64/OVMF_CODE.4m.fd \
	-drive if=pflash,format=raw,file=$VMS_ROOT/$1.efi \
	-drive file=$VMS_ROOT/$1.disk \
	-boot order=d &

    while ! nc -z localhost 5900; do
	sleep 1
    done

    vncviewer localhost:5900 &

    wait
}

vm-start() {
    if ((# < 1)); then
        echo 'Usage: vm-start <name>' >&2
        return 1
    fi

    qemu-system-x86_64 \
	-enable-kvm \
	-machine q35 \
	-device intel-iommu \
	-cpu host \
	-smp cores=3 \
	-m 12G \
	-drive if=pflash,format=raw,readonly=on,file=/usr/share/edk2/x64/OVMF_CODE.4m.fd \
	-drive if=pflash,format=raw,file=$VMS_ROOT/$1.efi \
	-drive file=$VMS_ROOT/$1.disk &

    while ! nc -z localhost 5900; do
	sleep 1
    done

    vncviewer localhost:5900 &

    wait
}
