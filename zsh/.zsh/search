# "-*- sh -*-"

csrcexts_pattern='.*\.('$csrcexts[1]
for csrcext in $csrcexts[2,-1]; do
    csrcexts_pattern+="|$csrcext"
done
csrcexts_pattern+=')'

srcexts_pattern='.*\.('$srcexts[1]
for srcext in $srcexts[2,-1]; do
    srcexts_pattern+="|$srcext"
done
srcexts_pattern+=')'

csrcnames=()
for csrcext in $csrcexts; do
    csrcnames+=(-name \*.$csrcext -o)
done
csrcnames=$csrcnames[0,-2]
srcnames=()
for srcext in $srcexts; do
    srcnames+=(-name \*.$srcext -o)
done
srcnames=$srcnames[0,-2]

excluded_files=(
    '*\.cache' '*\.deps' '*\.lo' '*\.log' '*\.m4' '*\.mk' '*\.output' '*\.status' '*~' '\.*~' '*\.bak'
    'Makefile\.in' 'autom4te\.cache' 'callgrind\.out' 'configure'
)
excluded_dirs=(
    '*\.bak' '.git' '.hg' '.svn'
)
excluded_dists=(
    'ChangeLog' 'INSTALL' 'Makefile' 'NEWS' 'NOTES' 'README' 'README\.md' 'TODO' 'TODO\.md'
)
exclusions=()
for excluded_file in $excluded_files; do
    exclusions+=(--ignore $excluded_file)
done
for excluded_dir in $excluded_dirs; do
    exclusions+=(--ignore $excluded_dir)
done
exclusions_dist=exclusions
for excluded_dist in $excluded_dists; do
    exclusions_dist+=(--ignore $excluded_dist)
done

search() {
    local all dist case exclude dir exp

    all=0
    dist=0
    case=-S

    if ((# > 1)) && [[ $1 = -i ]]; then
        case=-i
        shift
    fi

    if ((# > 1)) && [[ $1 = -s ]]; then
        case=-s
        shift
    fi

    if ((# > 1)) && [[ $1 = -d ]]; then
        dist=1
        shift
    fi

    if ((# > 1)) && [[ $1 = -a ]]; then
        all=1
        shift
    fi

    if ((# < 1)); then
        echo 'Usage: search [-d] [-i] [dir] <exp>' >&2
        return 1
    fi

    if ((# > 2)) && [[ $1 = -x ]]; then
        exclude+="--ignore $2"
        shift 2
    fi

    dir=.

    if ((# == 2)); then
        dir=$1
        shift
    fi

    exp=$1

    shift

    if ((all)); then
        ag -u --depth -1 --hidden $=exclude --color-line-number 32 --color-match '1;31' --color-path '1;33' $case -- $exp $dir
    elif ((dist)); then
        ag --depth -1 --hidden $=exclude $exclusions_dist --color-line-number 32 --color-match '1;31' --color-path '1;33' $case -- $exp $dir
    else
        ag --depth -1 --hidden $=exclude $exclusions --color-line-number 32 --color-match '1;31' --color-path '1;33' $case -- $exp $dir
    fi
}

/() {
    search $@
}
alias /='noglob /'
/i() {
    search -i $@
}
alias /i='noglob /i'
/l() {
    search $@ | less -r
}
alias /l='noglob /l'
/il() {
    search -i $@ | less -r
}
alias /il='noglob /il'
alias /li='noglob /il'
/f() {
    local dir

    dir=.

    if ((#)); then
        dir=$1
        shift
    fi

    find $dir -type f $@
}
/d() {
    dir=.

    if ((#)); then
        dir=$1
        shift
    fi

    find $dir -type f $@
}
/z() {
    runin $ZARKONF_DIR search $@
}
/a() {
    runin $ARKONF_DIR search $@
}
/r() {
    local case dir files exp res

    if ((# < 2)); then
        echo 'Usage: /r [dir] <files pattern> <exp>' >&2
        return 1
    fi

    case=-S

    if ((# > 1)) && [[ $1 = -i ]]; then
        case=-i
        shift
    fi

    if ((# > 1)) && [[ $1 = -s ]]; then
        case=-s
        shift
    fi

    dir=.

    if ((# == 3)); then
        dir=$1
        shift
    fi

    files=$1
    exp=$2

    case $files in
        cpp)
            files=$csrcexts_pattern
        ;;
        exa)
            files='.*\.exa'
        ;;
        java)
            files='.*\.(java|jj)'
        ;;
        jexo)
            files='.*\.(exa|java|jj|gexo)'
        ;;
        src)
            files=$srcexts_pattern
        ;;
    esac

    shift 2

    ag --depth -1 --hidden --color-line-number 32 --color-match '1;31' --color-path '1;33' $case -G $files -- $exp $dir
}
alias /r="noglob /r"
/x() {
    local i dir files exp

    if [[ $1 = -i ]]; then
        i=-i
        shift
    fi

    if ((# < 3)); then
        echo 'Usage: /x [-i] <dir> <files pattern> <exec>' >&2
        return 1
    fi

    dir=$1
    files=$2

    case $files in
        cpp)
            files=$csrcnames
        ;;
        src)
            files=$srcnames
        ;;
    esac

    shift 2

    find $dir -type f \( $=files \) -exec $@ \;
}
alias /x="noglob /x"

/t() {
    search 'TODO\|FIXME\|HACK'
}

rd() {
    if ((#)); then
        if [[ -f $1/README ]]; then
            bat $1/README
            return 0
        elif [[ -f $1/README.md ]]; then
            bat $1/README.md
            return 0
        elif [[ -f $1/README.rst ]]; then
            bat $1/README.rst
            return 0
        fi
    else
        if [[ -f ./README ]]; then
            bat ./README
            return 0
        elif [[ -f ./README.md ]]; then
            bat ./README.md
            return 0
        elif [[ -f ./README.rst ]]; then
            bat ./README.rst
            return 0
        fi
    fi
    echo 'No README, README.md or README.rst file in this directory' >&2
    return 1
}

checkheaders() {
    find . \( -name '*.hh' -o -name '*.hpp' -o -name '*.hxx' \) -exec awk '
/# *ifndef/ {
  guard = $(NF)
  left = 3
}

/# *define/ {
  if (left > 0) {
    left = 0
    if ($(NF) != guard) {
      print $(NF) " vs " guard
      error = 1
      exit
    } else
      exit
  }
}

{
  --left
}

END {
  if (!error)
    exit 1
}
' {} \; -print
}
