# "-*- sh -*-"

function zt()
{
    pattern='**'
    if ((# == 3)) && [[ $1 = '-R' ]]; then
	pattern='**/**'
	shift
    fi

    if ((# < 2)); then
	echo 'Usage: zt [-R] <source> <destination>' >&2
	return 1
    fi

    setopt dotglob

    if ((# > 2)); then # TODO FIXME il n'y a souvent que deux arguments aussi quand on gere a la main
	for source in $~pattern; do
	    destination=`echo $source | sed $*`
	    echo "$source => $destination"
	done

    else

	seps=(/ _ @ + - : [ ] \^ = \* \~ `seq 0 9`)
	for sep in $seps; do
	    separator=$sep
	    if [[ $1 != *$sep* && $2 != *$sep* ]]; then
		break
	    fi
	    separator=
	done

	if [[ -z $separator ]]; then
	    echo 'Oops, unable to find a separator, please improve zt()' >&2
	    return 2
	fi

	exp=$1

	if [[ $exp != *\$ ]]; then
	    exp+='.*'
	fi
	if [[ $exp != \^* ]]; then
	    exp=".*$exp"
	fi

	for source in $~pattern; do
	    destination=`echo $source | sed "s${separator}$exp${separator}$2${separator}g"`
	    echo "$source => $destination"
	done

    fi
    unsetopt dotglob
}

alias zt="noglob zt"
